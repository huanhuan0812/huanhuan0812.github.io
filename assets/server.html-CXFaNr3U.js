import{_ as n,c as a,a as e,o as p}from"./app-D9yqMSh_.js";const t={};function i(l,s){return p(),a("div",null,s[0]||(s[0]=[e(`<p>如何在Python中运行网页</p><p>Python可以通过几种方式运行或创建网页：</p><ol><li>使用内置HTTP服务器</li></ol><p>Python自带一个简单的HTTP服务器模块，可以快速启动一个本地服务器：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">python <span class="token operator">-</span>m http<span class="token punctuation">.</span>server <span class="token number">8000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这会在当前目录启动一个服务器，端口8000，可以通过浏览器访问http://localhost:8000查看目录中的文件。</p><ol start="2"><li>使用Web框架</li></ol><p>更常见的是使用Python Web框架来运行动态网页：</p><p>Flask示例</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask</span>
<span class="line"></span>
<span class="line">app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Django示例</p><ol><li><p>首先安装Django: pip install django</p></li><li><p>创建项目: django-admin startproject myproject</p></li><li><p>运行: python manage.py runserver</p></li><li><p>使用ASGI服务器运行现代网页应用</p></li></ol><p>对于异步网页应用，可以使用：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">pip install uvicorn</span>
<span class="line">uvicorn main<span class="token punctuation">:</span>app <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">reload</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>控制浏览器自动化</li></ol><p>使用selenium控制浏览器访问网页：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver</span>
<span class="line"></span>
<span class="line">driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://www.example.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>driver<span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line">driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>网页爬虫</li></ol><p>使用requests和BeautifulSoup获取并解析网页内容：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup</span>
<span class="line"></span>
<span class="line">response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://www.example.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line">soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&#39;html.parser&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>string<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择哪种方法取决于你的具体需求：简单文件服务、动态网页开发、浏览器自动化还是网页内容抓取。</p>`,21)]))}const c=n(t,[["render",i]]),r=JSON.parse('{"path":"/source/programming/python/server.html","title":"启动服务器","lang":"en-US","frontmatter":{"title":"启动服务器","order":2},"git":{"updatedTime":1755523499000,"contributors":[{"name":"github-actions[bot]","username":"github-actions[bot]","email":"41898282+github-actions[bot]@users.noreply.github.com","commits":4,"url":"https://github.com/github-actions[bot]"}],"changelog":[{"hash":"9610ae849c1b34c8b957788e00b268c943864938","time":1755523499000,"email":"41898282+github-actions[bot]@users.noreply.github.com","author":"github-actions[bot]","message":"deploy: huanhuan0812/docs@10fa7003b6666be7d2cc97a640d371acbe6b3b03"},{"hash":"4082395a95c7769b68a90676d88918d477b257ac","time":1755523443000,"email":"41898282+github-actions[bot]@users.noreply.github.com","author":"github-actions[bot]","message":"deploy: huanhuan0812/docs@7086cdac58b2461979a52ef2ac1b05e4080cb2fb"},{"hash":"876487d19e51b97b891b3fff65990cbe50edaf81","time":1755523412000,"email":"41898282+github-actions[bot]@users.noreply.github.com","author":"github-actions[bot]","message":"deploy: huanhuan0812/docs@f7d418b13c9bafe987677e66fb96b0c68c68b354"},{"hash":"c25977290b847e774d2f2eab6dd1698a1213c856","time":1755523402000,"email":"41898282+github-actions[bot]@users.noreply.github.com","author":"github-actions[bot]","message":"deploy: huanhuan0812/docs@5499bd1b106bd7fc04b7bdc7ae1ecd255ff5226f"}]},"filePathRelative":"source/programming/python/server.md"}');export{c as comp,r as data};
